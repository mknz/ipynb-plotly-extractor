#!/usr/bin/env python3
import argparse
import json
from pathlib import Path
import sys

from plotly.graph_objects import Figure


def process_file(path: Path, **kwargs):
    if not path.exists():
        print(f'No such file: {path}')
        sys.exit(1)

    if path.suffix != '.json':
        print(f'Not a json file: {path}')
        sys.exit(1)

    try:
        data = json.load(path.open('r'))
    except json.JSONDecodeError:
        print(f'Invalid file content: {path}')
        sys.exit(1)

    save_file_path = path.parent / (path.stem + '.html')
    fig = Figure(data['data'], data['layout'])
    fig.write_html(
        str(save_file_path),
        full_html=kwargs['full_html'],
        include_plotlyjs=kwargs['include_plotlyjs'],
    )
    print(f'Output: {save_file_path}')


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('file', type=str, nargs='+')
    parser.add_argument('--full-html', action='store_true')
    parser.add_argument('--include-plotlyjs', action='store_true')
    args = parser.parse_args()

    fpaths = [Path(p) for p in args.file]
    for path in fpaths:
        process_file(
            path,
            full_html=args.full_html,
            include_plotlyjs=args.include_plotlyjs,
        )


if __name__ == '__main__':
    main()
